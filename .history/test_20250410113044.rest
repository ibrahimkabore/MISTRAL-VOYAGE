# Initier un processus de connexion en envoyant un code de vérification à l'adresse e-mail de l'utilisateur.
# L'API renverra un code de statut 200 si l'initiation de la connexion est réussie.
# L'API renverra un code de statut 400 si le nom d'utilisateur ou le mot de passe est invalide.
# L'API renverra un code de statut 404 si l'utilisateur n'est pas trouvé.
# L'API renverra un code de statut 500 s'il y a une erreur interne du serveur.
POST http://127.0.0.1:8000/MistralVoyage/Authentication/login/initiate/
Content-Type: application/json

{
    "username": "kaboremessi@gmail.com",
    "password": "new_password_123"
}

# Compléter le processus de connexion en utilisant le code de vérification.
# L'API renverra un code de statut 200 si la connexion est réussie.
# L'API renverra un code de statut 400 si la connexion échoue.
# L'API renverra un code de statut 404 si l'utilisateur n'est pas trouvé.
# L'API renverra un code de statut 500 s'il y a une erreur interne du serveur.
POST http://127.0.0.1:8000/MistralVoyage/Authentication/login/complete/
Content-Type: application/json

{
  "username": "kaboremessi@gmail.com",
  "code": "390681"
}

POST  

# Enregistrer un nouvel utilisateur.
# L'API renverra un code de statut 201 si l'enregistrement est réussi.
# L'API renverra un code de statut 400 si l'enregistrement échoue.
# L'API renverra un code de statut 404 si l'utilisateur existe déjà.
# L'API renverra un code de statut 500 s'il y a une erreur interne du serveur.
POST http://127.0.0.1:8000/MistralVoyage/Authentication/register/
Content-Type: application/json

{
    "email": "kaboremessi@gmail.com",
    "first_name": "Kabore",
    "last_name": "Messi",
    "phone": "1234567890",
    "gender": "H",
    "password": "new_password_123",
    "password2": "new_password_123"
}

# Vérifier l'adresse e-mail d'un utilisateur.
# L'API renverra un code de statut 200 si la vérification est réussie.
# L'API renverra un code de statut 400 si la vérification échoue.
# L'API renverra un code de statut 404 si l'utilisateur n'est pas trouvé.
# L'API renverra un code de statut 500 s'il y a une erreur interne du serveur.
POST http://127.0.0.1:8000/MistralVoyage/Authentication/verify-email/
Content-Type: application/json

{
    "email": "kaboremessi@gmail.com",
    "code": "453200"
}

# Demander une réinitialisation de mot de passe pour un utilisateur.
# L'API renverra un code de statut 200 si la demande est réussie.
# L'API renverra un code de statut 400 si la demande échoue.
# L'API renverra un code de statut 404 si l'utilisateur n'est pas trouvé.
# L'API renverra un code de statut 500 s'il y a une erreur interne du serveur.
POST http://127.0.0.1:8000/MistralVoyage/Authentication/password/reset/request/
Content-Type: application/json

{
    "email": "kaboremessi@gmail.com"
}

# Compléter le processus de réinitialisation du mot de passe pour un utilisateur.
# L'API renverra un code de statut 200 si la réinitialisation du mot de passe est réussie.
# L'API renverra un code de statut 400 si la réinitialisation échoue.
# L'API renverra un code de statut 404 si l'utilisateur n'est pas trouvé.
# L'API renverra un code de statut 500 s'il y a une erreur interne du serveur.
POST http://127.0.0.1:8000/MistralVoyage/Authentication/password/reset/complete/
Content-Type: application/json

{
    "email": "kaboremessi@gmail.com",
    "code": "453200",
    "password": "re_new_password_123",
    "password2": "re_new_password_123"
}

# Déconnexion d'un utilisateur.
# L'API renverra un code de statut 200 si la déconnexion est réussie.
# L'API renverra un code de statut 400 si la déconnexion échoue.
# L'API renverra un code de statut 404 si l'utilisateur n'est pas trouvé.
# L'API renverra un code de statut 500 s'il y a une erreur interne du serveur.
POST http://127.0.0.1:8000/MistralVoyage/Authentication/logout/
Content-Type: application/json

{
    "access_token": "<token>",  #dans l'en-tête de la requête c'est le refresh token qui est envoyé
    "refresh_token": "<token>"  #dans le corps de la requête, assurez-vous d'envoyer le refresh token dans le corps de la requête

    { 
    "refresh": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc0MzYzNTAzOSwiaWF0IjoxNzQzNTQ4NjM5LCJqdGkiOiJhNGIwMzBmOGRmYmU0OGFlODI5MGJhZDU1MmE3MzIxYyIsInVzZXJfaWQiOiIyZTg2OTZiNC01MzBiLTRiM2ItODNjMi04YTc1MjQ1NmYwN2IifQ.EVVClb8PsFP4jhCGpBvLWOwEuOL1oSwcWnt8CmxImT0"
    }
}


# Récupérer les informations du profil de l'utilisateur.
# L'API renverra un code de statut 200 si la récupération est réussie.
# L'API renverra un code de statut 400 si la récupération échoue.
# L'API renverra un code de statut 404 si l'utilisateur n'est pas trouvé.
# L'API renverra un code de statut 500 s'il y a une erreur interne du serveur.
GET http://127.0.0.1:8000/MistralVoyage/Authentication/profile/

Content-Type: application/json

{
    "access_token": "<token>",  #dans l'en-tête de la requête c'est le refresh token qui est envoyé
    "refresh_token": "<token>"  #dans le corps de la requête, assurez-vous d'envoyer le refresh token dans le corps de la requête

    { 
    "refresh": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc0MzYzNTAzOSwiaWF0IjoxNzQzNTQ4NjM5LCJqdGkiOiJhNGIwMzBmOGRmYmU0OGFlODI5MGJhZDU1MmE3MzIxYyIsInVzZXJfaWQiOiIyZTg2OTZiNC01MzBiLTRiM2ItODNjMi04YTc1MjQ1NmYwN2IifQ.EVVClb8PsFP4jhCGpBvLWOwEuOL1oSwcWnt8CmxImT0"
    }
}


######"flights"####

POST http://127.0.0.1:8000/MistralVoyage/Flights/flights/search/

Content-Type: application/json

{
    "access_token": "<token>",  #dans l'en-tête de la requête c'est le refresh token qui est envoyé
    "refresh_token": "<token>"  #dans le corps de la requête, assurez-vous d'envoyer le refresh token dans le corps de la requête

    { 
    "refresh": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc0MzYzNTAzOSwiaWF0IjoxNzQzNTQ4NjM5LCJqdGkiOiJhNGIwMzBmOGRmYmU0OGFlODI5MGJhZDU1MmE3MzIxYyIsInVzZXJfaWQiOiIyZTg2OTZiNC01MzBiLTRiM2ItODNjMi04YTc1MjQ1NmYwN2IifQ.EVVClb8PsFP4jhCGpBvLWOwEuOL1oSwcWnt8CmxImT0"
    }
}

#Pour un vol aller simple (sans date de retour) :
{
  "origin": "CDG",
  "destination": "JFK",
  "departure_date": "2025-05-15",
  "adults": 1,
  "travel_class": "BUSINESS",
  "currency_code": "XOF"
}

#Pour un voyage en famille :
{
  "origin": "ORY",
  "destination": "BCN",
  "departure_date": "2025-07-10",
  "return_date": "2025-07-17",
  "adults": 2,
  "children": 2,
  "infants": 1,
  "travel_class": "ECONOMY"
}

#Pour un voyage d'affaires :
{
  "origin": "LHR",
  "destination": "SIN",
  "departure_date": "2025-06-05",
  "return_date": "2025-06-12",
  "adults": 1,
  "travel_class": "BUSINESS"
}

POST http://127.0.0.1:8000/MistralVoyage/Flights/flights/multi-city-search/

{
  "segments": [
    {
      "origin": "CDG",
      "destination": "JFK",
      "departure_date": "2025-06-15"
    },
    {
      "origin": "JFK",
      "destination": "LAX",
      "departure_date": "2025-06-22"
    },
    {
      "origin": "LAX",
      "destination": "CDG",
      "departure_date": "2025-06-29"
    }
  ],
  "adults": 2,
  "children": 1,
  "infants": 0,
  "travel_class": "ECONOMY",
  "currency_code": "EUR"
}


POST http://127.0.0.1:8000/MistralVoyage/Flights/bookings/create/

Content-Type: application/json 

  {  
    
  "refresh": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc0NDIzMDg1MCwiaWF0IjoxNzQ0MTQ0NDUwLCJqdGkiOiI1YTBkZDE2YTI2NWI0MjFmYTA5ZDQ3Zjc1MTE2YWMxOSIsInVzZXJfaWQiOiI0MWU5YzQxOS05OTJkLTQ3NTUtYTUzMi1iNWQzZTQ0ZDgzNWMifQ.KAXeqbqoWFK4npQzy_DC22REa7Olse_dCpFadJsTMGk",


    "flight_data": {
      "origin": {
        "code": "ABJ",
        "name": "Aéroport ABJ"
      },
      "destination": {
        "code": "CDG",
        "name": "CHARLES DE GAULLE",
        "city": "PARIS",
        "country": "FRANCE"
      },
      "departure_date": "2025-04-18T16:45:00",
      "arrival_date": "2025-04-19T07:25:00",
      "price": 175100.00,
      "currency": "XOF",
      "airline": "HC",
      "flight_number": "306/403",
      "travel_class": "ECONOMY",
      "available_seats": 6,
      "duration": "PT12H40M",
      "segments": [
        {
          "departure": {
            "iataCode": "ABJ",
            "at": "2025-04-18T16:45:00"
          },
          "arrival": {
            "iataCode": "DSS",
            "at": "2025-04-18T19:30:00"
          },
          "carrierCode": "HC",
          "number": "306"
        },
        {
          "departure": {
            "iataCode": "DSS",
            "at": "2025-04-19T00:45:00"
          },
          "arrival": {
            "iataCode": "CDG",
            "terminal": "2C",
            "at": "2025-04-19T07:25:00"
          },
          "carrierCode": "HC",
          "number": "403"
        }
      ],
      "raw_flight_offer": {
        "type": "flight-offer",
        "id": "1",
        "source": "GDS",
        "instantTicketingRequired": false,
        "nonHomogeneous": false,
        "oneWay": false,
        "lastTicketingDate": "2025-04-18",
        "numberOfBookableSeats": 6,
        "itineraries": [
          {
            "duration": "PT12H40M",
            "segments": [
              {
                "departure": {
                  "iataCode": "ABJ",
                  "at": "2025-04-18T16:45:00"
                },
                "arrival": {
                  "iataCode": "DSS",
                  "at": "2025-04-18T19:30:00"
                },
                "carrierCode": "HC",
                "number": "306",
                "aircraft": {
                  "code": "319"
                },
                "operating": {
                  "carrierCode": "HC"
                },
                "duration": "PT2H45M",
                "id": "72",
                "numberOfStops": 0,
                "blacklistedInEU": false
              },
              {
                "departure": {
                  "iataCode": "DSS",
                  "at": "2025-04-19T00:45:00"
                },
                "arrival": {
                  "iataCode": "CDG",
                  "terminal": "2C",
                  "at": "2025-04-19T07:25:00"
                },
                "carrierCode": "HC",
                "number": "403",
                "aircraft": {
                  "code": "330"
                },
                "operating": {
                  "carrierCode": "HC"
                },
                "duration": "PT4H40M",
                "id": "73",
                "numberOfStops": 0,
                "blacklistedInEU": false
              }
            ]
          }
        ],
        "price": {
          "currency": "XOF",
          "total": "175100.00",
          "base": "22600.00",
          "fees": [
            {
              "amount": "0.00",
              "type": "SUPPLIER"
            },
            {
              "amount": "0.00",
              "type": "TICKETING"
            }
          ],
          "grandTotal": "175100.00"
        },
        "pricingOptions": {
          "fareType": [
            "PUBLISHED"
          ],
          "includedCheckedBagsOnly": true
        },
        "validatingAirlineCodes": [
          "HC"
        ],
        "travelerPricings": [
          {
            "travelerId": "1",
            "fareOption": "STANDARD",
            "travelerType": "ADULT",
            "price": {
              "currency": "XOF",
              "total": "175100.00",
              "base": "22600.00"
            },
            "fareDetailsBySegment": [
              {
                "segmentId": "72",
                "cabin": "ECONOMY",
                "fareBasis": "XXOWCI1",
                "class": "X",
                "includedCheckedBags": {
                  "quantity": 3
                },
                "includedCabinBags": {
                  "quantity": 1
                }
              },
              {
                "segmentId": "73",
                "cabin": "ECONOMY",
                "fareBasis": "XXOWCI1",
                "class": "X",
                "includedCheckedBags": {
                  "quantity": 3
                },
                "includedCabinBags": {
                  "quantity": 1
                }
              }
            ]
          }
        ]
      }
    },
    "passengers": [
      {
        "first_name": "John",
        "last_name": "Doe",
        "date_of_birth": "1985-05-15",
        "gender": "MALE",
        "passport_number": "P12345678",
        "passport_expiry": "2030-01-01",
        "passport_country": "CI",
        "nationality": "CI",
        "passenger_type": "ADULT"
      }
    ],
    "contact_email": "john.doe@example.com",
    "contact_phone": "+22501020304",
    "payment_method": "WAVE" 
  }


GET http://127.0.0.1:8000/MistralVoyage/Flights/bookings/UJ438J8X/

Content-Type: application/json

{
    "access_token": "<token>",  #dans l'en-tête de la requête c'est le refresh token qui est envoyé
    "refresh_token": "<token>"  #dans le corps de la requête, assurez-vous d'envoyer le refresh token dans le corps de la requête

    { 
    "refresh": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc0NDEyNDAzNSwiaWF0IjoxNzQ0MDM3NjM1LCJqdGkiOiIzNTNmYTkyMDE0Yjg0ZmEwODYyMDFkMTg2NmFlNDFhMCIsInVzZXJfaWQiOiIyZTg2OTZiNC01MzBiLTRiM2ItODNjMi04YTc1MjQ1NmYwN2IifQ.9Yc06uZLrTE1YGntkYd41VycT8uSifFO0gCYKcnkdh8"
    }
}